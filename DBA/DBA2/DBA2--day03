2019-03-20

###########################################################################################
	集群环境准备：51 52 53 54 55  实现主机之间相互无密码登陆
	]# yum -y install perl-*   #每台主机安装依赖包 

	配置主机56可以无密码ssh所有数据库服务器 51 ～55
		]# ssh-keygen -f /root/.ssh/id_rsa -N ''

	配置一主多从 （52 ～ 55都做 51 的从 数据库 服务器）

	主机56 作为监控用

	把 目录 mha-soft-student 

一、MHA集群概述  ：pssh
	1.1 集群的定义： 多台服务器一起提供




二、部署MHA集群

	master51 数据库服务器配置文件： 51 52 53 做 半同复制模式 配置操作
	mysql> set global relay_log_purge=off;  #不自动删除中继日志
	mysql> show  variables  like  'have_dynamic_loading'; #默认为Yes，允许状态

	mysql> install plugin rpl_semi_sync_master soname "semisync_master.so";
	mysql> install plugin rpl_semi_sync_slave soname "semisync_slave.so";

	mysql> set global rpl_semi_sync_master_enabled = 1;
	mysql> set global rpl_semi_sync_slave_enabled = 1;
	mysql>  show  variables  like  "rpl_semi_sync_%_enabled";

	[]# vim /etc/my.cnf
		[mysqld]
		relay_log_purge=off
		plugin-load \
="rpl_semi_sync_master=semisync_master.so;rpl_semi_sync_slave=semisync_slave.so"
		rpl-semi-sync-master-enabled = 1
		rpl-semi-sync-slave-enabled = 1


	54 ～ 55从库配置文件操作：
	mysql> set global relay_log_purge=off;  #不自动删除中继日志
	mysql> show  variables  like  'have_dynamic_loading'; #默认为Yes，允许状态
	mysql> install plugin rpl_semi_sync_slave soname "semisync_slave.so";
	mysql> set global rpl_semi_sync_slave_enabled = 1;
	mysql>  show  variables  like  "rpl_semi_sync_%_enabled";

	[]# vim /etc/my.cnf
		[mysqld]
		plugin-load="rpl_semi_sync_slave=semisync_slave.so"
		rpl-semi-sync-slave-enabled = 1
		relay_log_purge=off

	2.2 配置集群：
	2.2.1 配置管理主机 192.168.4.56
		1 安装依赖包
			]# cd mha-soft-student
			]# yum -y install perl-*.rpm
			]# rm -rf 	perl-*.rpm	

		2 安装提供MHA程序的软件包			
			]# yum -y install mha4mysql-node-0.56-0.el6.noarch.rpm
			]# tar -zcvf mha4mysql-manager-0.56.tar.gz
			]# cd mha4mysql-manager-0.56
			]# perl Makefile.PL     #运行
			]# make && make install

		3 创建管理服务的主配置文件
			]# mkdir /etc/mha_manager			 
			]# cp samples/conf/app1.cnf /etc/mha_manager/

		4 编辑主配置文件/etc/mha_manager/app1.cnf
			]# vim /etc/mha_manager/app1.cnf

				[server default]
				manager_workdir=/etc/mha_manager   	      #指定工作目录   
				manager_log=/etc/mha_manager/manager.log    #日志存放目录
				master_ip_failover_script=/etc/mha_manager/master_ip_failover

				ssh_user=root   #无密码登陆
				ssh_port=22

				repl_user=repluser3     #从库同步数据连接主库的授权用户及密码
				repl_password=123456
				user=root	   		#监控用户  	    
				password=123456

				[server1]              	#管理服务器所管理的主机
				hostname=192.168.4.51   	#第一台被管理主机的ip
				candidate_master=1	#竞争做主库

				[server2]
				hostname=192.168.4.52
				candidate_master=1

				[server3]
				hostname=192.168.4.53
				candidate_master=1

				[server4]
				hostname=192.168.4.54
				no_master=1

				[server5]
				hostname=192.168.4.55
				no_master=1

	2.2.2 配置数据库服务主机 192.168.4.51～55
		]# cd soft/mysql/mha_soft_student
		]# yum -y install  mha4mysql-node-0.56-0.el6.noarch.rpm 
		]# yum -y install *.rpm
						

	2.2.3 根据管理主机的配置做相应的配置
		2.1 在数据库服务器51～55上添加监控用户root		
		]# mysql -uroot -p123456
		mysql> grant all on *.* to root@"%" identified by "123456"; #其他从库自动同步数据
		测试：
		]# mysql -h192.168.4.52~55 -uroot -p123456
		
		2.2 在备用主库服务器52、53添加 添加同步数据用户repluser3
		mysql> grant replication slave on *.* to repluser3@"%" identified by "123456";

		2.3 创建故障切换脚本 并定义vip地址
			]# cd soft/mysql/mha_soft_student/
			]# cp master_ip_failover /etc/mha_manager/ #将故障脚本拷贝到工作目录下
			]# vim  /etc/mha_manager/master_ip_failover
				my $vip = '192.168.4.100/24';  # Virtual IP   #只需要修改VIP地址
				......
			]# chmod +x /etc/mha_manager/master_ip_failover  #给脚本赋予执行权限

		2.4 把vip地址部署在当前 主库192.168.4.51
			[]# ifconfig eth0:1 192.168.4.100 #手动部署vip在51主库的eth0网卡上
			[]# ifcofig eth0:1  #查看vip

	2.2.4 在管理主机上做检测配置
		2.2.4.1 检测ssh无密码连接
		]# masterha_check_ssh --conf=管理节点主配置文件

		]# masterha_check_ssh --conf=/etc/mha_manager/app1.cnf
			All SSH connection tests passed successfully. #提示ssh无密码连接成功

		2.2.4.2 检测一主多从 主从同步
		]# masterha_check_repl --conf=/etc/mha_manager/app1.cnf
			MySQL Replication Health is OK.  #提示一主多从配置成功

		2.2.4.3 排错时间 30分钟

	2.2.5 启动管理主机上 管理服务，并查看状态
		1 启动服务
			]# masterha_manager --conf=/etc/mha_manager/app1.cnf  #占用一个终端
			选项：
				--remove_dead_master_conf  #将坏了的主库从配置文件中删除
				--ignore_last_failover	   #忽略xxx.head文件
		2 查看状态
		]# masterha_check_status --conf=/etc/mha_manager/app1.cnf  
			app1 (pid:7624) is running(0:PING_OK), master:192.168.4.51

三、测试集群
	3.1 在主库51 上添加访问数据的授权用户alice
		mysql> create database gamedb;
		mysql> grant all on gamedb.* to alice@"%" identified by "123456";

	3.2 客户端 50 连接vip 地址访问数据库服务
      	]# mysql -h192.168.4.100 -ualice -p123456 
		mysql> create table gamedb.t1(id int);
		mysql> insert into gamedb.t1 values(7777);
		mysql> select * from gamedb.t1;

3.3 测试高可用集群
  
	3.3.1 停止当前主库 51 的数据库服务器,启动时添加选项
		]# masterha_manager --conf=/etc/mha_manager/app1.cnf --remove_dead_master_conf\
			--ignore_last_failover
		]# systemctl stop mysqld
	3.3.2 客户端50 已然能连接vip地址192.168.4.100 访问数据库服务 
			]# ping 192.168.4.100  #将主库51 停止后，vip仍然存在，客户端仍然可以访问数据库
			]# mysqld -h192.168.4.100 -ualice -p123456 gamedb

	3.3.3 从库54 和55 会连接新的主库同步数据
			]# mysql -uroot -p123456 -e "show slave status\G" | grep -i 'yes\|192'
	
                  Master_Host: 192.168.4.52  #新的主库
             	Slave_IO_Running: Yes
           		 Slave_SQL_Running: Yes

	3.3.4 在新的主库上查看vip地址
		[root@mysql-52 ~]# ifconfig eth0:1
		eth0:1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
             inet 192.168.4.100  netmask 255.255.255.0  broadcast 192.168.4.255
             ether 52:54:00:07:67:84  txqueuelen 1000  (Ethernet)	
































































































