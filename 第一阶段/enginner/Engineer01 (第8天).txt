教学环境介绍

  优先开启虚拟机classroom,优先一秒钟即可

真机使用rht-vmctl辅助工具
• 控制教学用虚拟机
 – 格式:rht-vmctl  控制指令   虚拟机名     
 – 常用控制指令:
]# rht-vmctl  reset  classroom  //先重置资源服务器
]# rht-vmctl  reset  server     //再重置练习虚拟机
]# rht-vmctl  reset  desktop    //再重置练习虚拟机
######################################################
扇区默认512字节

一块硬盘的“艺术”之旅
• 识别硬盘 => 分区规划 => 格式化 => 挂载使用
   毛坯楼层 => 打隔断 => 装修 => 入驻

一  识别硬盘
[root@server0 ~]# lsblk    #列识别的硬盘设备
NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
vda    253:0    0  10G  0 disk 
└─vda1 253:1    0  10G  0 part /
vdb    253:16   0  10G  0 disk 
[root@server0 ~]# ls  /dev/vdb

二  分区规划
     分区模式:  MBR  GPT
       MBR: 主分区   扩展分区   逻辑分区 
                    最多可以有4个主分区,  逻辑分区需要建立在扩展分区之上
                    最终常用方案  3个主分区  一个扩展分区  n个逻辑分区
                    最大支持的空间为2TB

            
• 修改硬盘的分区表
– fdisk 硬盘设备

[root@server0 ~]# fdisk  /dev/vdb 
  n 创建新的分区----->回车----->回车---->回车----->在last结束时 +1G
  p 查看分区表
  n 创建新的分区----->回车----->回车---->回车----->在last结束时 +2G
  d 删除分区
  w 保存并退出    

[root@server0 ~]# lsblk
[root@server0 ~]# ls  /dev/vdb[1-2]

三  格式化,赋予空间文件系统过程
     文件系统:存储数据的规则
     常见文件系统:ext4 xfs

• mkfs 工具集
– mkfs.ext3 分区设备路径
– mkfs.ext4 分区设备路径
– mkfs.xfs 分区设备路径
– mkfs.vfat -F 32 分区设备路径
[root@server0 ~]# mkfs.ext4 /dev/vdb1  #格式化ext4文件系统
[root@server0 ~]# blkid /dev/vdb1      #查看文件系统类型

[root@server0 ~]# mkfs.xfs /dev/vdb2  #格式化xfs文件系统
[root@server0 ~]# blkid /dev/vdb2     #查看文件系统类型

四  挂载使用
[root@server0 ~]# mkdir /mypart1            
[root@server0 ~]# mount /dev/vdb1  /mypart1  
[root@server0 ~]# df -h     #查看正在挂载设备的使用情况

[root@server0 ~]# mount /dev/vdb2  /mypart2
[root@server0 ~]# df -h

五  开机自动挂载 /etc/fstab

• 配置文件 /etc/fstab 的记录格式
   设备路径     挂载点       类型      参数        备份标记      检测顺序
/dev/vdb1  /mypart1  ext4   defaults   0         0
/dev/vdb2  /mypart2  xfs    defaults   0         0

vim文本编辑器: 按o  另起新的一行 进入 插入模式
[root@server0 ~]# vim /etc/fstab 

/dev/vdb1  /mypart1  ext4  defaults  0 0
/dev/vdb2  /mypart2  xfs   defaults  0 0

[root@server0 ~]# umount /mypart1  #保证当前没有挂载,进行测试
[root@server0 ~]# umount /mypart2
[root@server0 ~]# df -h

[root@server0 ~]# mount -a
   检测/etc/fstab开机自动挂载配置文件,格式是否正确
   检测/etc/fstab中,书写完成,但当前没有挂载的设备,进行挂载 
[root@server0 ~]# df -h    #查看自动挂载情况
#######################################################
综合分区:
 最终有3个主分区，分别为1G、2G、2G
   创建扩展分区 --->  两个逻辑分区，分别为2G、2G
[root@server0 ~]# fdisk  /dev/vdb
   p 查看分区表
   n 创建主分区----->回车----->回车---->回车----->在last结束时 +2G
   p 查看分区表
   n 创建扩展分区 
          ----->回车---->起始回车----->结束回车   将所有空间给扩展分区
   p 查看分区表
   n 创建逻辑分区----->起始回车------>结束+2G
   n 创建逻辑分区----->起始回车------>结束+2G
   p 查看分区表
   w 保存并退出
[root@server0 ~]# lsblk 
[root@server0 ~]# partprobe   #刷新  分区表信息 识别新的分区
[root@server0 ~]# lsblk 
[root@server0 ~]# ls /dev/vdb[1-6]
####################################################
总结:
  1.识别硬盘  lsblk
  2.划分分区   fdisk
  3.刷新  新的分区信息  partprobe
  4.格式化   mkfs.ext4  mkfs.xfs  查看文件系统类型 blkid
  5.挂载使用  mount   开机自动挂载 /etc/fstab  检测命令 mount -a

    df  -h :查看正在挂载的设备,使用情况

    /dev/sda1: SCSI设备第一块第一个分区

    /dev/sda5: SCSI设备第一块第五个分区
               SCSI设备第一块第一个逻辑分区

##################################################
进行分区:关闭虚拟机,添加一块新的80G硬盘
1.关闭虚拟机server
[root@server0 ~]# poweroff 
Connection to 172.25.0.11 closed by remote host.
Connection to 172.25.0.11 closed.
[root@room9pc01 ~]# 

2.图形添加一块新的80G硬盘
[root@room9pc01 ~]# gos
[root@server0 ~]# lsblk

3.针对/dev/vdc进行综合分区:
      划分3个主分区,分别为10G
      划分扩展分区,使用全部剩余空间,划分2个逻辑分区,分别为10G
[root@server0 ~]# fdisk  /dev/vdc  
   p 查看分区表
   n 创建主分区----->回车----->回车---->回车----->在last结束时 +10G
         连续创建3个10G主分区
      ......
   n 创建扩展分区 
               ----->回车---->起始回车----->结束回车  将所有空间给扩展分区
   p 查看分区表
   n 创建逻辑分区----->起始回车------>结束+10G
   n 创建逻辑分区----->起始回车------>结束+10G
   p 查看分区表
   w 保存并退出
[root@server0 ~]# lsblk                     

####################################################
LVM逻辑卷

    作用:  1.整合分散空间   2.逻辑卷空间可以扩大

– 零散空闲存储 ---- 整合的虚拟磁盘 ---- 虚拟的分区

 物理卷(PV)
 Physical Volume
 卷组(VG)
 Volume Group
 逻辑卷(LV)
 Logical Volume
 
  将众多的物理卷,组成卷组,再从卷组中划分逻辑卷

################################################
LVM管理工具集

功能               物理卷管理  	卷组管理 	  逻辑卷管理
Scan 扫描       pvscan 	 vgscan 	     lvscan
Create 创建    pvcreate 	 vgcreate 	lvcreate
Display 显示  pvdisplay 	 vgdisplay 	lvdisplay
Remove 删除    pvremove 	 vgremove 	lvremove
Extend 扩展       /		  vgextend 	lvextend

#################################################
一  建立逻辑卷

successfully(成功)

  1.创建卷组systemvg
        格式:vgcreate  卷组名   设备路径
[root@server0 ~]# vgcreate  systemvg  /dev/vdc[1-2]
  Physical volume "/dev/vdc1" successfully created
  Physical volume "/dev/vdc2" successfully created
  Volume group "systemvg" successfully created

[root@server0 ~]# vgs    #查看卷组基本信息
[root@server0 ~]# pvs    #查看物理卷基本信息

  2.创建逻辑卷mylv
[root@server0 ~]# lvcreate -L 16G -n mylv systemvg 
  Logical volume "mylv" created
[root@server0 ~]# vgs
[root@server0 ~]# lvs    #查看逻辑卷基本信息

  3.逻辑卷使用
[root@server0 ~]# ls /dev/systemvg/mylv     #查看设备路径
/dev/systemvg/mylv
[root@server0 ~]# ls -l /dev/systemvg/mylv
[root@server0 ~]# mkfs.xfs  /dev/systemvg/mylv  #格式化
[root@server0 ~]# blkid /dev/systemvg/mylv  #查看文件系统类型

[root@server0 ~]# vim /etc/fstab 

/dev/systemvg/mylv  /lvm   xfs  defaults  0  0

[root@server0 ~]# mount  -a   #检测开机自动挂载是否书写正确
[root@server0 ~]# df -h       #查看是否挂载成功

######################################################
二  逻辑卷的扩展

 1.卷组有足够的剩余空间
  A:扩展逻辑卷的空间
 [root@server0 ~]# lvs    #查看逻辑卷信息
 [root@server0 ~]# vgs    #查看卷组信息
 [root@server0 ~]# lvextend -L 18G /dev/systemvg/mylv 
 [root@server0 ~]# lvs    #查看逻辑卷是否扩展成功
  B:扩展逻辑卷的文件系统
            扩展ext4文件系统:resize2fs 
            扩展xfs文件系统:xfs_growfs 
 [root@server0 ~]# df -h
 [root@server0 ~]# xfs_growfs /dev/systemvg/mylv 
 [root@server0 ~]# df -h   #查看文件系统是否扩展成功

 2.卷组没有足够的剩余空间
   A:首先扩展卷组的空间
 [root@server0 ~]# vgextend systemvg /dev/vdc3
 [root@server0 ~]# vgs
 [root@server0 ~]# vgextend systemvg /dev/vdc5
 [root@server0 ~]# vgs
   B:扩展逻辑卷的空间
 [root@server0 ~]# lvs    #查看逻辑卷信息
 [root@server0 ~]# vgs    #查看卷组信息
 [root@server0 ~]# lvextend -L 25G /dev/systemvg/mylv 
 [root@server0 ~]# lvs    #查看逻辑卷是否扩展成功
   C:扩展逻辑卷的文件系统
            扩展ext4文件系统:resize2fs 
            扩展xfs文件系统:xfs_growfs 
 [root@server0 ~]# df -h
 [root@server0 ~]# xfs_growfs /dev/systemvg/mylv 
 [root@server0 ~]# df -h   #查看文件系统是否扩展成功
#####################################################
了解内容:逻辑卷也可以缩小
        xfs文件系统本身不支持缩小
        ext4文件系统本身支持缩小


卷组划分空间的单位: PE     默认  1PE=4M

[root@server0 ~]# vgdisplay  systemvg   #查看卷组详细信息

  PE Size               4.00 MiB

 请划分一个逻辑卷 lvredhat 大小为250M
[root@server0 ~]# vgchange -s 1M systemvg    #修改PE大小为1M
  Volume group "systemvg" successfully changed
[root@server0 ~]# lvcreate -L 250M -n lvtest systemvg 
  Logical volume "lvtest" created

[root@server0 ~]# lvs
[root@server0 ~]# lvcreate -l 800 -n lvtest01 systemvg
  Logical volume "lvtest01" created
[root@server0 ~]# lvs

    -l:指定PE的个数    
                                                               
######################################################

2. 基于刚建立的 2000MiB 分区构建新的 LVM 存储
– 新的逻辑卷命名为 database,大小为50个物理扩展单
元(Physical Extent),属于 datastore 卷组
– 在 datastore 卷组中的所有逻辑卷,其物理扩展单元
(Physical Extent)的大小为16MiB
– 使用 EXT3 文件系统对逻辑卷 database 格式化,此逻
辑卷应该在开机时自动挂载到 /mnt/database 目录

• 创建卷组的时候设置PE大小
– vgcreate -s PE大小 卷组名 空闲分区...

• 创建逻辑卷的时候指定PE个数
– lvcreate -l PE个数 -n 逻辑卷名 卷组名

######################################################
逻辑卷的删除:
   顺序:首先删除逻辑卷,然后在删除卷组,最后删除物理卷

[root@server0 ~]# lvremove  /dev/systemvg/mylv 
  Logical volume systemvg/mylv contains a filesystem in use.
[root@server0 ~]# umount /lvm    #首先卸载逻辑卷
[root@server0 ~]# lvremove /dev/systemvg/mylv 
Do you really want to remove active logical volume mylv? [y/n]: y
  Logical volume "mylv" successfully removed

删除卷组:前提没有逻辑卷,基于该卷组创建
[root@server0 ~]# lvs
[root@server0 ~]# vgs
  VG       #PV #LV #SN Attr   VSize  VFree 
  systemvg   4   0   0 wz--n- 39.98g 39.98g
[root@server0 ~]# vgremove systemvg 
  Volume group "systemvg" successfully removed
[root@server0 ~]# vgs
  No volume groups found
[root@server0 ~]# 

#####################################################





 

































































































































