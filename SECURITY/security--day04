2019-04-04

################################################################################
一、 iptables防火墙
1.1 防火墙概述
   1.1.1 什么是防火墙
	1）一道保护性的安全屏障：保护、隔离

  1.1.2 Linux包过滤防火墙
	1) RHEL7默认使用firewalld作为防火墙
	2）但firewalld底层还是调用包过滤防火墙iptables

51 安装iptables-service
	]# yum -y install iptables-services
	]# systemctl start iptables
	]# systemctl enable iptables

1.1.3 iptables的组成（由4张表、5条链 组成）
   表（是服务的功能分类）
	1）raw：状态跟踪表
	2）mangle：包标记表
	3）nat：地址转换表
	4）filter：过滤表
   链（是数据包的传输方向 以防火墙服务器本机为参照）
	1）INPUT：匹配到达防火墙本机的数据包
	2）OUTPUT：匹配从防火墙本机出去的数据包
	3）FOEWARD：匹配经过防火墙主机的数据包
	4）POSTROUTING：路由后处理（选中后作处理---商量好后，再作决定）
	5）PREROUTING：路由前处理（选中前作处理----没有商量，就作了决定）

1.1.4 包过滤匹配流程（链里规则的执行顺序  链里可以有多条匹配的规则）
	1）规则链内的匹配顺序：
	    * 顺序比对，匹配即停止（LOG日志除外：如果规则是记录日志，则还继续匹配下一条规则）
	    * 若无任何匹配，则按该链的默认策略处理

1.1.5 iptables用法解析：
  iptables基本用法
	1）管理程序位置：/sbin/iptables
	2）指令组成：
	   ]# iptables --help  #查看命令帮助
	   ]# man iptables   #查看man帮助
	   ]# iptables [-t 表名] 选项 [链名] [条件] [-j 目标操作]
注意事项/整体规律：
	* 可以不指定表，默认为filter表
	* 可以不指定链，默认为对应表的所有链
	* 如果没有匹配的规则，则使用防火墙默认规则
	* 选项/链名/目标操作作用大写字母，其余都小写
]# iptables -t filter -I INPUT -p icmp -j REJECT #添加规则，拒绝其他主机ping本机，有回应
]# iptables -t filter -L INPUT --line-numbers  #查看规则，显示行号
]# iptables -t filter -D INPUT 1  #删除第一条规则
]# iptables -t filter -I INPUT -p icmp -j DROP #添加规则拒绝其他主机ping本机，没有回应 
基本的目标操作：
	* ACCEPT：允许通过/方形
	* DROP：直接丢弃，不给出任何回应
	* REJECT：拒绝通过，必要时会给出提示
	* LOG：记录日志，然后传给下一条规则
常用的管理选项：
	1）添加规则：-A --->在链的末尾追加一条规则
		    -I --->在链的开头（或指定序号）插入一条规则
	2）查看规则：-L --->列出所有的规则条目
		    -n --->以数字形式显示地址、端口等信息
	--line-numbers --->查看规则时，显示规则的序号
	3）删除规则：-D --->删除链内指定序号（或内容）的一条规则
		    -F --->清空所有的规则
	4）默认策略：-P --->为指定的链设置默认规则（只能时ACCEPT或者DROP）

查看规则：
]# iptables -L  #不接表名，默认为查看filter表、所有链
]# iptables -L INPUT  #
]# iptables -nL INPUT #默认查看filter表的INPUT的规则
]# iptables -nL  -t 表名  #查看表的链规则



二、 filter表控制
1.1 主机型防火墙：自己保护自己  保护其他主机----->网络型防火墙
	51 主机 运行
	]# yum -y install nmap
	]# nmap -sS -n -p 21-80 localhost #扫描21-80端口
	]# nmap -sS -n -p 3306,6351,27051 localhost

基本的匹配条件：
	1）通用匹配
	   * 可直接使用，不依赖于其他条件或扩展
	   * 包括网络协议、IP地址、网络接口等条件
	2）隐含匹配
	    * 要求以特定的协议匹配作为前提
	    * 包括端口、TCP标记、ICMP类型等条件
例子：
]# iptables -t filter -A INPUT -s 192.168.4.254 -p tcp --dport 22 -j ACCEPT
]# iptables -t filter -P INPUT DROP  #禁止除254外的其他所有主机访问本机,本机与其他主机不能互ping
]# iptables -t filter -nL --line-number  #

放行服务：
]# iptables -t filter -A INPUT -p tcp --dport 80 -j ACCEPT  #放行web服务
]# iptables -t filter -A INPUT -p tcp --dport 3306 -j ACCEPT #放行数据库服务
 	               		#其他主机可以使用51 数据库中的授权用户进行登陆
禁ping相关策略处理：
	1）允许本机ping其他主机
	2）但禁止其他主机ping本机
]# iptables -t filter -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
	#当ping其他主机的时候，有回应包echo-reply，但本机没有接收，需要放行接收回应包的规则


1.2 网络型防火墙







三、 扩展匹配
	1）前提条件：有对应的防火墙模块支持
	2）基本用法：
	   -m 扩展模块  --扩展条件 条件值
	   示例：-m mac --mac-source 00：0c:19:74:BE:21

]# arp -n  #查看访问过本机的其他主机的mac地址

常见的扩展条件类型：
	1）MAC地址匹配：-m mac --mac-source MAC 地址
	2）多端口匹配： -m multiport --sports 源端口列表
			 -m multiport --dports 目标端口列表
	3）IP范围匹配：-m iprange --src-range IP1-IP2
			-m iprange --dst-range IP1-IP2
例子：
]# iptables -t filter -D INPUT 4  #删除第4条规则
]# iptables -t filter -A INPUT -p icmp -j ACCEPT  #允许本机与其他主机互通(全放行)
]# iptables -t filter -I INPUT 4 -p icmp -m mac --mac-source 52:54:00:9e:4a:47 -j DROP
	#将50 的eth0的mac地址禁，不管ip地址变成什么，eth0网卡都不可通
]# iptables -t filter -A INPUT -p tcp -m multiport --dport 80,3306 -j ACCEPT
	#将多条规则写成一条，
]# iptables -t filter -I INPUT 3 -p icmp -m iprange --src-range 192.168.4.52-192.168.4.54 -j DROP  #禁止52-54的主机ping本机，要写在全放行的规则之前



四、 nat表典型应用
4.1 NAT 地址转换
	50、51主机作为内网：指定网关192.168.4.52
	~]# systemctl stop NetworkManager  #停止
	~]# route add default gw 192.168.4.52 #临时配置网关
	~]# route -n  #查看网关

	52主机：eth0：192.168.4.51  eth1：192.168.2.51  -->作网关，nat表进行地址转换
	添加eth1网卡：
	 	]# nmcli connection add type ethernet ifname eth1 con-name eth1
		]# nmcli connection modify eth1 ipv4.method manual ipv4.addresses 
              192.168.2.52/24 connection.autoconnect yes
		]# nmcli connection up eth1

	 ~]# vim /etc/sysctl.conf #
		.....
		net.ipv4.ip_forward = 1  #开启内核路由转换功能
	~]# sysctl -p |grep -i forward
		net.ipv4.ip_forward = 1

配置iptables防火墙策略：
	]# iptables -t nat -A POSTROUTING -s 192.168.4.0/24 -p tcp --dport 80 -j SNAT 
                   --to-source 192.168.2.52 -->公网地址
	]# iptables -t nat -nL POSTROUTING
若公网地址不固定,则改为：
	]# iptables -t nat -A POSTROUTING -s 192.168.4.0/24 -p tcp --dport 80 
        -o eth1  -j MASQUERADE  #-o指定从那个网卡流出

50、51访问测试：
	]# curl http://192.168.2.57  #可以访问到页面

57查看网页日志文件：
      57主机：eth1：192.168.2.57 禁用eth0网卡: ]# ifdown eth0 --->作公网
		运行web服务
	]# tail -f /etc/httpd/logs/access_log  #查看是192.168.2.52发来的请求

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
例子2：	
 	放行内网主机可以访问外网web服务，内网主机可以ssh外网主机，外网主机也可以ssh内网主机

实现50、51、52、57全网互通：将57的网关指定192.168.2.52；清空52的iptables中nat表的规则
[root@mysql-57 ~]# systemctl stop NetworkManager
[root@mysql-57 ~]# route add default gw 192.168.2.52
[root@mysql-57 ~]# route -n

[root@maxscal-52 ~]# iptables -t nat -F  #52清空nat表规则
测试：
[root@DBA-50 ~]# ssh 192.168.2.57  #50、51、52都可以连通192.168.2.57

设置52 主机的iptables规则：
[root@maxscal-52 ~]# iptables -t filter -P FORWARD DROP  #设置默认不转发，要转发另外设置规则
放行访问的：
	]# iptables -t filter -A FORWARD -p tcp --dport 80 -j ACCEPT  #目标
放行回复的：
	]# iptables -t filter -A FORWARD -p tcp --sport 80 -j ACCEPT
	]# iptables -t filter -nL FORWARD --line-numbers #查看规则

放行访问ssh的：
	]# iptables -t filter -A FORWARD -p tcp --dport 22 -j ACCEPT  #目标端口
放行回复ssh的： 
	]# iptables -t filter -A FORWARD -p tcp --sport 22 -j ACCEPT  #源端口回复


实现iptables规则永久生效：
	]# iptables-save > /etc/sysconfig/iptables  #要手动将规则保存到防火墙启动默认加载的文件内
	
SNAT源地址转换：
	1）修改数据包的源地址
	2）仅用于nat表的POSTROUTING链







































































